{"version":3,"sources":["components/RecipeListView.js","components/ProfileUpdate.js","components/ProfileView.js","components/ProfileCreate.js","components/RecipeUpdate.js","components/RecipeDetail.js","components/RecipeCreate.js","components/Signup.js","components/Login.js","containers/Nav.js","containers/Home.js","App.js","serviceWorker.js","index.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","RecipeList","state","recipes","componentDidMount","bind","get","process","then","response","setState","data","catch","err","console","log","this","props","map","recipe","className","title","author","username","to","id","src","image","alt","description","date_published","Component","ProfileUpdate","preview","handleChange","handleImage","handleSubmit","e","preventDefault","target","name","value","file","files","reader","FileReader","readAsDataURL","onloadend","result","formData","FormData","append","display_name","bio","File","avatar","patch","headers","res","redirect","JSON","parse","localStorage","getItem","token","type","onSubmit","htmlFor","defaultValue","onChange","date_joined","ProfileView","profile","ProfileCreate","post","error","method","RecipeUpdate","handleImageChange","ingredients","instructions","tags","match","params","RecipeDetail","handleDelete","delete","onClick","RecipeCreate","Signup","email","password1","password2","signUp","setItem","stringify","placeholder","Login","password","handleLogin","autoComplete","Nav","handleLogout","removeItem","window","location","reload","aria-label","Home","App","path","exact","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"8UAOAA,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEhC,IA0DeC,E,YAvDb,aAAe,IAAD,8BACZ,+CAEOC,MAAQ,CACXC,QAAS,IAEb,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBANb,E,iFASO,IAAD,OAClBR,IAAMS,IAAN,UAbaC,uDAab,qBAECC,MAAK,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAACP,QAASM,EAASE,UAClDC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,+BAK1BC,QAAQC,IAAIC,KAAKC,OACf,IAAId,EAAUa,KAAKd,MAAMC,QAAQe,KAAI,SAAAC,GAAM,OAEzC,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,cACf,4BAAKD,EAAOE,OACZ,4BAAKF,EAAOG,OAAOC,WAGnB,kBAAC,IAAD,CAAMC,GAAE,mBAAcL,EAAOM,IAAML,UAAU,2BAA7C,SAEF,yBAAKA,UAAU,yBACb,yBAAKM,IAAKP,EAAOQ,MAAOC,IAAI,+BAG9B,2BAAIT,EAAOU,aACX,2BAAIV,EAAOW,qBAMf,OAEA,4BACE,4BACG3B,Q,GA/CY4B,aCJzBlC,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEhC,IA6GegC,E,YAzGb,aAAe,IAAD,8BACZ,+CAEK9B,MAAQ,CACXC,QAAS,GACT8B,QAAS,IAGX,EAAK7B,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAK6B,aAAe,EAAKA,aAAa7B,KAAlB,gBACpB,EAAK8B,YAAc,EAAKA,YAAY9B,KAAjB,gBACnB,EAAK+B,aAAe,EAAKA,aAAa/B,KAAlB,gBAXR,E,0EAeDgC,GACXA,EAAEC,iBACFtB,KAAKN,SAAL,eAAgB2B,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,U,kCAI/BJ,GAAI,IAAD,OACbA,EAAEC,iBACF,IAAII,EAAOL,EAAEE,OAAOI,MAAM,GAC1B3B,KAAKN,SAAL,eAAgB2B,EAAEE,OAAOC,KAAOE,IAAO,kBAAM5B,QAAQC,IAAI,EAAKb,UAE9D,IAAI0C,EAAS,IAAIC,WACjBD,EAAOE,cAAcJ,GACrBE,EAAOG,UAAY,kBAAM,EAAKrC,SAAS,CAACuB,QAASW,EAAOI,Y,mCAG7CX,GACXA,EAAEC,iBAEF,IAAIW,EAAW,IAAIC,SACnBD,EAASE,OAAO,eAAgBnC,KAAKd,MAAMkD,cAC3CH,EAASE,OAAO,MAAOnC,KAAKd,MAAMmD,KAG9BrC,KAAKd,MAAMyB,QAAU2B,KACvBL,EAASE,OAAO,SAAUnC,KAAKd,MAAMqD,QAGvC1D,IAAM2D,MAAN,UA/CajD,uDA+Cb,4BAA2CS,KAAKd,MAAMuB,GAAtD,KAA6DwB,EAAU,CACrEQ,QAAS,CACP,eAAgB,yBAKnBjD,MAAK,SAAAkD,GAAG,OAAI5C,QAAQC,IAAI2C,KAAM1C,KAAKN,SAAS,CAACiD,UAAU,KACvD/C,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,0CAGP,IAAD,OAElBhB,IAAMS,IAAN,UA5DaC,uDA4Db,qBAA0C,CACxCkD,QAAS,CAAC,cAAgB,SAAhB,OAA0BG,KAAKC,MAAMC,aAAaC,QAAQ,iBAAiBC,UAEtFxD,MAAK,SAAAC,GAAQ,OAAI,EAAKC,SAASD,EAASE,KAAK,OAC7CC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,+BAG1B,OAAIG,KAAKd,MAAMyD,SACL,kBAAC,IAAD,CAAUnC,GAAG,cAKf,yBAAKJ,UAAU,kBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,0BACf,0BAAM6C,KAAK,SAASC,SAAUlD,KAAKoB,cACjC,gDAEA,2BAAO+B,QAAQ,gBAAf,sBACA,2BAAOF,KAAK,OAAOzB,KAAK,eAAe4B,aAAcpD,KAAKd,MAAMkD,aAAciB,SAAUrD,KAAKkB,eAC7F,4BAAKlB,KAAKd,MAAMkD,cAEd,yBAAK1B,IAAKV,KAAKd,MAAMqD,OAAQ3B,IAAI,0BACjC,2BAAOuC,QAAQ,UAAf,uBACA,2BAAOF,KAAK,OAAOzB,KAAK,SAAS4B,aAAcpD,KAAKd,MAAMqD,OAAQc,SAAUrD,KAAKmB,cAEjF,2BAAO8B,KAAK,OAAOzB,KAAK,MAAM4B,aAAcpD,KAAKd,MAAMmD,IAAKgB,SAAUrD,KAAKkB,eAC3E,2BAAIlB,KAAKd,MAAMmD,MAEf,yBAAKjC,UAAU,aAOnB,yBAAKA,UAAU,eACb,4CAAkBJ,KAAKd,MAAMoE,eAG3B,yBAAKlD,UAAU,SACb,kBAAC,EAAD,Y,GAnGMW,aCL5BlC,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEhC,IA0DeuE,E,YAtDb,aAAe,IAAD,8BACZ,+CAEKrE,MAAQ,CACXsE,QAAS,IAGX,EAAKpE,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAPb,E,iFAUO,IAAD,OAClBS,QAAQC,IAAIC,MACZnB,IAAMS,IAAN,UAhBaC,uDAgBb,qBAA0C,CACxCkD,QAAS,CAAC,cAAgB,SAAhB,OAA0BG,KAAKC,MAAMC,aAAaC,QAAQ,iBAAiBC,UAEtFxD,MAAK,SAAAC,GAAQ,OAAI,EAAKC,SAASD,EAASE,KAAK,OAC7CC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,+BAK1B,OADAC,QAAQC,IAAIC,KAAKC,OAGf,yBAAKG,UAAU,kBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,0BACb,kBAAC,IAAD,CAASI,GAAG,uBAAZ,kBACA,4BAAKR,KAAKd,MAAMkD,cAEd,yBAAK1B,IAAKV,KAAKd,MAAMqD,OAAQ3B,IAAI,0BACjC,2BAAIZ,KAAKd,MAAMmD,KAEf,yBAAKjC,UAAU,aAMnB,yBAAKA,UAAU,eACb,4CAAkBJ,KAAKd,MAAMoE,eAG3B,yBAAKlD,UAAU,SACb,yBAAKA,UAAU,yCACb,kBAAC,IAAD,CAASA,UAAU,uBAAuBI,GAAG,eAA7C,uBAEF,kBAAC,EAAD,Y,GA/CUO,aCP1BlC,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEhC,IAmFeyE,E,YA/Eb,aAAe,IAAD,8BACZ,+CAEKvE,MAAQ,CACXsE,QAAS,GACTvC,QAAS,IAIX,EAAKE,YAAc,EAAKA,YAAY9B,KAAjB,gBACnB,EAAK6B,aAAe,EAAKA,aAAa7B,KAAlB,gBACpB,EAAK+B,aAAe,EAAKA,aAAa/B,KAAlB,gBAXR,E,yEAeFgC,GAAI,IAAD,OACbA,EAAEC,iBACF,IAAII,EAAOL,EAAEE,OAAOI,MAAM,GAC1B3B,KAAKN,SAAL,eAAgB2B,EAAEE,OAAOC,KAAOE,IAEhC,IAAIE,EAAS,IAAIC,WACjBD,EAAOE,cAAcJ,GACrBE,EAAOG,UAAY,kBAAM,EAAKrC,SAAS,CAACuB,QAASW,EAAOI,Y,mCAG7CX,GACXA,EAAEC,iBACFtB,KAAKN,SAAL,eAAgB2B,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,U,mCAI9BJ,GACXA,EAAEC,iBACF,IAAIW,EAAW,IAAIC,SACnBD,EAASE,OAAO,eAAgBnC,KAAKd,MAAMkD,cAC3CH,EAASE,OAAO,MAAOnC,KAAKd,MAAMmD,KAClCJ,EAASE,OAAO,SAAUnC,KAAKd,MAAMqD,QAGrC1D,IAAM6E,KAAN,UA3CanE,uDA2Cb,qBAA2C0C,EAAU,CACnDQ,QAAS,CACP,eAAgB,sBAChB,cAAgB,SAAhB,OAA0BG,KAAKC,MAAMC,aAAaC,QAAQ,iBAAiBC,UAG9ExD,MAAK,SAAAC,GAAQ,OAAIK,QAAQC,IAAI,OAAQN,EAASE,QAC/CK,KAAKN,SAAS,CAACiD,UAAU,KAExB/C,OAAM,SAAA+D,GAAK,OAAI7D,QAAQC,IAAI4D,Q,+BAI5B,OAAI3D,KAAKd,MAAMyD,SACN,kBAAC,IAAD,CAAUnC,GAAG,cAIpB,yBAAKJ,UAAU,kBACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,aACb,0BAAM6C,KAAK,SAASW,OAAO,OAAOV,SAAUlD,KAAKoB,cACjD,2BAAO+B,QAAQ,gBAAf,0BACA,2BAAOF,KAAK,OAAOzB,KAAK,eAAe4B,aAAa,GAAGC,SAAUrD,KAAKkB,eAEtE,2BAAOiC,QAAQ,UAAf,oBACA,2BAAOF,KAAK,OAAOzB,KAAK,SAAS4B,aAAa,GAAGC,SAAUrD,KAAKmB,cAEhE,2BAAOgC,QAAQ,OAAf,YACA,2BAAOF,KAAK,OAAOzB,KAAK,MAAM4B,aAAa,GAAGC,SAAUrD,KAAKkB,eAE7D,wD,GAvEgBH,aCT5BlC,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEhC,IAqHe6E,E,YAlHb,WAAY5D,GAAQ,IAAD,8BACjB,4CAAMA,KAEDf,MAAQ,CACXC,QAAS,IAGX,EAAK2E,kBAAoB,EAAKA,kBAAkBzE,KAAvB,gBACzB,EAAKD,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAK+B,aAAe,EAAKA,aAAa/B,KAAlB,gBACpB,EAAK6B,aAAe,EAAKA,aAAa7B,KAAlB,gBAVH,E,0EAaNgC,GACXA,EAAEC,iBACFtB,KAAKN,SAAL,eAAgB2B,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,QACzC3B,QAAQC,IAAI,SAAUC,KAAKd,S,wCAGXmC,GAAI,IAAD,OACnBA,EAAEC,iBAEF,IAAII,EAAOL,EAAEE,OAAOI,MAAM,GAE1B3B,KAAKN,SAAL,eAAgB2B,EAAEE,OAAOC,KAAOE,IAAO,kBAAM5B,QAAQC,IAAI,EAAKb,UAE9D,IAAI0C,EAAS,IAAIC,WACjBD,EAAOE,cAAcJ,GACrBE,EAAOG,UAAY,kBAAM,EAAKrC,SAAS,CAACuB,QAASW,EAAOI,UACxDlC,QAAQC,IAAI,MAAOC,KAAKd,S,mCAGXmC,GACXA,EAAEC,iBAEFxB,QAAQC,IAAIC,KAAKd,OAGjB,IAAI+C,EAAW,IAAIC,SAEnBD,EAASE,OAAO,QAASnC,KAAKd,MAAMmB,OACpC4B,EAASE,OAAO,cAAenC,KAAKd,MAAM2B,aAC1CoB,EAASE,OAAO,cAAenC,KAAKd,MAAM6E,aAC1C9B,EAASE,OAAO,eAAgBnC,KAAKd,MAAM8E,cAC3C/B,EAASE,OAAO,OAAQnC,KAAKd,MAAM+E,MAO/BjE,KAAKd,MAAMyB,QAAU2B,KACvBL,EAASE,OAAO,QAASnC,KAAKd,MAAMyB,OAMxC9B,IAAM2D,MAAN,UA7DajD,uDA6Db,2BAA0CS,KAAKC,MAAMiE,MAAMC,OAAO1D,GAAlE,KAAyEwB,EAAU,CACjFQ,QAAS,CACP,eAAgB,yBAGnBjD,MAAK,SAAAC,GAAQ,OAAIK,QAAQC,IAAIN,MAC7BG,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,0CAGP,IAAD,OAClBC,QAAQC,IAAIC,KAAKC,MAAMiE,OAGvBrF,IAAMS,IAAN,UA1EaC,uDA0Eb,2BAAwCS,KAAKC,MAAMiE,MAAMC,OAAO1D,KAC/DjB,MAAK,SAAAC,GAAQ,OAAI,EAAKC,SAASD,EAASE,SACxCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,+BAI1B,OACE,yBAAKO,UAAU,kBACb,yBAAKA,UAAU,mBACb,0BAAM6C,KAAK,SAASW,OAAO,MAAMV,SAAUlD,KAAKoB,cAC9C,2BAAO+B,QAAQ,SAAf,iBACA,2BAAOF,KAAK,OAAOzB,KAAK,QAAQ6B,SAAUrD,KAAKkB,aAAckC,aAAcpD,KAAKd,MAAMmB,QAEtF,2BAAO8C,QAAQ,eAAf,gBACA,2BAAOF,KAAK,OAAOzB,KAAK,cAAc6B,SAAUrD,KAAKkB,aAAckC,aAAcpD,KAAKd,MAAM2B,cAE5F,2BAAOsC,QAAQ,SAAf,gCACA,2BAAOF,KAAK,OAAOzB,KAAK,QAAQ6B,SAAUrD,KAAK8D,kBAAmBV,aAAcpD,KAAKd,MAAMyB,QAE1FX,KAAKd,MAAMyB,MAEZ,yBAAKD,IAAKV,KAAKd,MAAM+B,QAASL,IAAI,0BAEhC,KAGF,2BAAOuC,QAAQ,eAAf,sCACA,2BAAOF,KAAK,OAAOzB,KAAK,cAAc6B,SAAUrD,KAAKkB,aAAckC,aAAcpD,KAAKd,MAAM6E,cAE5F,2BAAOZ,QAAQ,gBAAf,2BACA,2BAAOF,KAAK,OAAOzB,KAAK,eAAe6B,SAAUrD,KAAKkB,aAAckC,aAAcpD,KAAKd,MAAM8E,eAE7F,2BAAOb,QAAQ,QAAf,yDACA,2BAAOF,KAAK,OAAOzB,KAAK,OAAO6B,SAAUrD,KAAKkB,aAAckC,aAAcpD,KAAKd,MAAM+E,OAErF,sD,GA3GelD,aCL3BlC,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEhC,IAsEeoF,E,YAnEb,aAAe,IAAD,8BACZ,+CAEKlF,MAAQ,CACXiB,OAAQ,IAIV,EAAKf,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKgF,aAAe,EAAKA,aAAahF,KAAlB,gBATR,E,0EAcDgC,GACXxC,IAAMyF,OAAN,UAlBa/E,uDAkBb,2BAA2CS,KAAKC,MAAMiE,MAAMC,OAAO1D,GAAnE,MACCjB,MAAK,SAAAC,GAAQ,OAAIK,QAAQC,IAAIN,MAC7BG,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,0CAKP,IAAD,OAIlBhB,IAAMS,IAAN,UA7BaC,uDA6Bb,2BAAwCS,KAAKC,MAAMiE,MAAMC,OAAO1D,GAAhE,MACCjB,MAAK,SAAAC,GAAQ,OAAI,EAAKC,SAASD,EAASE,SACxCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,+BAO1B,OACE,yBAAKO,UAAU,kBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,4BAAKJ,KAAKd,MAAMmB,QAId,yBAAKkE,QAASvE,KAAKqE,aAAcjE,UAAU,0BAA3C,iBAGF,kBAAC,IAAD,CAASI,GAAE,kBAAaR,KAAKd,MAAMuB,KAAM,4BAAQL,UAAU,2BAAlB,gBAEzC,2BAAIJ,KAAKd,MAAM2B,aAEf,2BAAIb,KAAKd,MAAM6E,aAEf,2BAAI/D,KAAKd,MAAM8E,cAEf,2BAAIhE,KAAKd,MAAM4B,kBAInB,yBAAKV,UAAU,iBACb,yBAAKM,IAAI,GAAGE,IAAI,oC,GA7DDG,aCL3BlC,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEhC,IAqGewF,E,YAjGb,aAAe,IAAD,8BACZ,+CAEKtF,MAAQ,CACTiB,OAAQ,GACRc,QAAS,IAIb,EAAKC,aAAe,EAAKA,aAAa7B,KAAlB,gBACpB,EAAK+B,aAAe,EAAKA,aAAa/B,KAAlB,gBACpB,EAAKyE,kBAAoB,EAAKA,kBAAkBzE,KAAvB,gBAXb,E,0EAcDgC,GACXA,EAAEC,iBACFtB,KAAKN,SAAL,eAAgB2B,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,U,wCAKzBJ,GAAI,IAAD,OACnBA,EAAEC,iBACF,IAAII,EAAOL,EAAEE,OAAOI,MAAM,GAC1B3B,KAAKN,SAAL,eAAgB2B,EAAEE,OAAOC,KAAOE,IAChC5B,QAAQC,IAAIC,KAAKd,OAEjB,IAAI0C,EAAS,IAAIC,WACjBD,EAAOE,cAAcJ,GACrBE,EAAOG,UAAY,kBAAM,EAAKrC,SAAS,CAACuB,QAASW,EAAOI,Y,mCAG7CX,EAAGlB,GACdkB,EAAEC,iBACF,IAAIW,EAAW,IAAIC,SAEnBD,EAASE,OAAO,QAAShC,EAAOE,OAChC4B,EAASE,OAAO,cAAehC,EAAOU,aACtCoB,EAASE,OAAO,QAAShC,EAAOQ,OAChCsB,EAASE,OAAO,cAAehC,EAAO4D,aACtC9B,EAASE,OAAO,eAAgBhC,EAAO6D,cACvC/B,EAASE,OAAO,OAAQhC,EAAO8D,MAG/BpF,IAAM6E,KAAN,UAhDanE,uDAgDb,oBAA0C0C,EAAU,CAClDQ,QAAS,CACP,eAAgB,yBAInBjD,MAAK,SAAAkD,GAAG,OAAI5C,QAAQC,IAAI2C,EAAKA,EAAI/C,SACjCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,+BAIlB,IAAD,OACP,OACE,yBAAKO,UAAU,kBACb,yBAAKA,UAAU,mBACb,0BAAM6C,KAAK,SAASW,OAAO,OAAOV,SAAU,SAAC7B,GAAD,OAAO,EAAKD,aAAaC,EAAG,EAAKnC,SAC3E,2BAAOiE,QAAQ,SAAf,iBACA,2BAAOF,KAAK,OAAOzB,KAAK,QAAQ6B,SAAUrD,KAAKkB,aAAckC,aAAa,KAE1E,2BAAOD,QAAQ,eAAf,gBACA,2BAAOF,KAAK,OAAOzB,KAAK,cAAc6B,SAAUrD,KAAKkB,aAAckC,aAAa,KAEhF,2BAAOD,QAAQ,SAAf,gCACA,2BAAOF,KAAK,OAAOzB,KAAK,QAAQ6B,SAAUrD,KAAK8D,oBAE9C9D,KAAKd,MAAMyB,MAEZ,yBAAKD,IAAKV,KAAKd,MAAM+B,QAASL,IAAI,0BAEhC,KAGF,2BAAOuC,QAAQ,eAAf,sCACA,2BAAOF,KAAK,OAAOzB,KAAK,cAAc6B,SAAUrD,KAAKkB,aAAckC,aAAa,KAEhF,2BAAOD,QAAQ,gBAAf,2BACA,2BAAOF,KAAK,OAAOzB,KAAK,eAAe6B,SAAUrD,KAAKkB,aAAckC,aAAa,KAEjF,2BAAOD,QAAQ,QAAf,yDACA,2BAAOF,KAAK,OAAOzB,KAAK,OAAO6B,SAAUrD,KAAKkB,aAAckC,aAAa,KAEzE,sD,GAtFerC,aCH3BlC,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEhC,IAiEeyF,E,YA9Db,aAAe,IAAD,8BACZ,+CAEKvF,MAAQ,CACXqB,SAAU,GACVmE,MAAO,GACPC,UAAW,GACXC,UAAW,IAIb,EAAKC,OAAS,EAAKA,OAAOxF,KAAZ,gBACd,EAAK6B,aAAe,EAAKA,aAAa7B,KAAlB,gBAZR,E,0EAeDgC,GACXA,EAAEC,iBACFtB,KAAKN,SAAL,eAAgB2B,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,U,6BAGpCJ,GAAI,IAAD,OACRA,EAAEC,iBAMFxB,QAAQC,IAAIC,KAAKd,OACjBL,IAAM6E,KAAN,UA/BanE,uDA+Bb,4BAAkDS,KAAKd,OACtDM,MAAK,SAAAkD,GACJI,aAAagC,QAAQ,eAAgBlC,KAAKmC,UAAUrC,EAAI/C,OACxD,EAAKD,SAAS,CAACiD,UAAU,OAG1B/C,OAAM,SAAAC,GAAQC,QAAQC,IAAIF,Q,+BAI3B,OAA4B,IAAxBG,KAAKd,MAAMyD,SAEX,kBAAC,IAAD,CAAUnC,GAAG,oBAIf,yBAAKJ,UAAU,aACb,0BAAMwD,OAAO,OAAOX,KAAK,SAASC,SAAUlD,KAAK6E,QAC/C,2BAAO1B,QAAQ,YAAf,aACA,2BAAOF,KAAK,OAAOzB,KAAK,WAAWwD,YAAY,WAAWvD,MAAOzB,KAAKd,MAAMqB,SAAU8C,SAAUrD,KAAKkB,eACrG,2BAAOiC,QAAQ,SAAf,UACA,2BAAOF,KAAK,QAAQzB,KAAK,QAAQC,MAAOzB,KAAKd,MAAMwF,MAAOrB,SAAUrD,KAAKkB,eACzE,2BAAOiC,QAAQ,YAAf,aACA,2BAAOF,KAAK,WAAWzB,KAAK,YAAYC,MAAOzB,KAAKd,MAAMyF,UAAWtB,SAAUrD,KAAKkB,eACpF,2BAAOiC,QAAQ,cAAf,qBACA,2BAAOF,KAAK,WAAWzB,KAAK,YAAYC,MAAOzB,KAAKd,MAAM0F,UAAWvB,SAAUrD,KAAKkB,eACpF,4BAAQd,UAAU,2BAAlB,kB,GAvDWW,aCNrBlC,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEhC,IA2DeiG,E,YAvDb,aAAe,IAAD,8BACZ,+CAEK/F,MAAQ,CACXqB,SAAU,GACV2E,SAAU,GACVvC,SAAU,GAGZ,EAAKwC,YAAc,EAAKA,YAAY9F,KAAjB,gBACnB,EAAK6B,aAAe,EAAKA,aAAa7B,KAAlB,gBAVR,E,0EAaDgC,GACXA,EAAEC,iBACFtB,KAAKN,SAAL,eAAgB2B,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,U,kCAI/BJ,GAAI,IAAD,OACbA,EAAEC,iBACFxB,QAAQC,IAAIC,KAAKC,OACjBpB,IAAM6E,KAAN,UA1BanE,uDA0Bb,qBAA2CS,KAAKd,OAC/CM,MAAK,SAAAkD,GACJI,aAAagC,QAAQ,eAAgBlC,KAAKmC,UAAUrC,EAAI/C,OACxDG,QAAQC,IAAI2C,EAAI/C,MAChB,EAAKD,SAAS,CAACiD,SAAU,OAI1B/C,OAAM,SAAAC,GAAQC,QAAQC,IAAIF,Q,+BAI3B,OAA4B,IAAxBG,KAAKd,MAAMyD,SACN,kBAAC,IAAD,CAAUnC,GAAG,cAItB,yBAAKJ,UAAU,aACb,0BAAMwD,OAAO,OAAOX,KAAK,SAASC,SAAUlD,KAAKmF,aAC/C,2BAAOhC,QAAQ,YAAf,aACE,2BAAOF,KAAK,OAAOxB,MAAOzB,KAAKd,MAAMqB,SAAU6E,aAAa,WAAW5D,KAAK,WAAW6B,SAAUrD,KAAKkB,eACxG,2BAAOiC,QAAQ,YAAf,aACE,2BAAOF,KAAK,WAAWxB,MAAOzB,KAAKd,MAAMgG,SAAUE,aAAa,mBAAmB5D,KAAK,WAAW6B,SAAUrD,KAAKkB,eACpH,gD,GA9CYH,aCPpBlC,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEhC,IA2DeqG,E,YAxDb,aAAe,IAAD,8BACZ,+CACKC,aAAe,EAAKA,aAAajG,KAAlB,gBAFR,E,0EAMDgC,GACXA,EAAEC,iBACFzC,IAAM6E,KAAN,UAXanE,uDAWb,sBAA4C,CAC1CkD,QAAS,CACP,cAAgB,SAAhB,OAA0BG,KAAKC,MAAMC,aAAaC,QAAQ,iBAAiBC,UAE9ExD,MAAK,SAAAkD,GACJI,aAAayC,WAAW,gBACxBC,OAAOC,SAASC,QAAO,MAExB9F,OAAM,SAAAC,GAAQC,QAAQC,IAAIF,Q,+BAK3B,OACE,yBAAKO,UAAU,kBACb,yBAAKA,UAAU,sDACb,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,QACjB,kBAAC,IAAD,CAAMA,UAAU,oBAAoBI,GAAG,KAAvC,QAEA,kBAAC,IAAD,CAAMJ,UAAU,oBAAoBI,GAAG,aAAvC,WAEA,kBAAC,IAAD,CAAMJ,UAAU,oBAAoBI,GAAG,gBAAvC,iBAEA,kBAAC,IAAD,CAAMJ,UAAU,oBAAoBI,GAAG,UAAvC,SAEA,kBAAC,IAAD,CAAMJ,UAAU,oBAAoBI,GAAG,UAAU+D,QAASvE,KAAKsF,cAA/D,UAEA,kBAAC,IAAD,CAAMlF,UAAU,oBAAoBI,GAAG,WAAvC,YAGA,yBAAKJ,UAAU,SAEf,0BAAMA,UAAU,2BACd,2BAAOA,UAAU,uBAAuB6C,KAAK,SAAS+B,YAAY,SAASW,aAAW,WACtF,4BAAQvF,UAAU,qCAAqC6C,KAAK,UAA5D,WAGF,kBAAC,IAAD,CAAM7C,UAAU,4BAA4BI,GAAG,aAA/C,mB,GA/CUO,aCNlBlC,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,c,IAejB4G,E,iLARX,OACE,yBAAKxF,UAAU,kBACb,0D,GANWW,aCanBlC,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEhC,IAkDe6G,E,YA9Cb,aAAe,IAAD,8BACZ,+CAEK3G,MAAQ,CACXC,QAAS,IAGX,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAPb,E,iFAUO,IAAD,OAElBR,IAAMS,IAAN,UAhBaC,uDAgBb,qBAECC,MAAK,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAACP,QAASM,EAASE,UAClDC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,+BAM1B,OAEE,kBAAC,IAAD,KACE,yBAAKO,UAAU,mBACb,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAO0F,KAAK,IAAIC,OAAK,EAACC,UAAWJ,IACjC,kBAAC,IAAD,CAAOE,KAAK,sBAAsBE,UAAWhF,IAC7C,kBAAC,IAAD,CAAO8E,KAAK,mBAAmBE,UAAWvC,IAC1C,kBAAC,IAAD,CAAOqC,KAAK,YAAYE,UAAWzC,IACnC,kBAAC,IAAD,CAAOuC,KAAK,eAAeE,UAAWxB,IACtC,kBAAC,IAAD,CAAOsB,KAAK,YAAYC,OAAK,EAACC,UAAW/G,IACzC,kBAAC,IAAD,CAAO6G,KAAK,eAAeE,UAAW5B,IACtC,kBAAC,IAAD,CAAO0B,KAAK,eAAeE,UAAWnC,IACtC,kBAAC,IAAD,CAAOiC,KAAK,SAASE,UAAWf,IAChC,kBAAC,IAAD,CAAOa,KAAK,UAAUE,UAAWvB,W,GAtCzB1D,aChBEkF,QACW,cAA7BT,OAAOC,SAASS,UAEe,UAA7BV,OAAOC,SAASS,UAEhBV,OAAOC,SAASS,SAAShC,MACvB,2DCLNrF,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEhCmH,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjH,MAAK,SAAAkH,GACJA,EAAaC,gBAEd/G,OAAM,SAAA+D,GACL7D,QAAQ6D,MAAMA,EAAMiD,c","file":"static/js/main.a5354bca.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport '../App.css';\n\n\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\nclass RecipeList extends Component {\n  constructor() {\n    super();\n\n      this.state = {\n        recipes: [],\n      }\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(`${BASE_URL}/api/v1/recipes/`)\n\n    .then(response => this.setState({recipes: response.data}))\n    .catch(err => console.log(err));\n\n  }\n\n  render() {\n    console.log(this.props);\n      let recipes = this.state.recipes.map(recipe => (\n\n        <div className=\"row no-gutters\">\n          <div className=\"col-8 ml-auto card d-flex\">\n            <div className=\"title card-body\">\n              <div className=\"card-title\">\n              <h1>{recipe.title}</h1>\n              <h2>{recipe.author.username}</h2>\n              </div>\n\n              <Link to={`/recipes/${recipe.id}`} className=\"btn btn-outline-success\">View</Link>\n            </div>\n            <div className=\"d-flex align-self-end\">\n              <img src={recipe.image} alt=\"Whoops! Sorry! No can do.\"/>\n\n            </div>\n            <p>{recipe.description}</p>\n            <p>{recipe.date_published}</p>\n          </div>\n\n        </div>\n      ))\n\n        return (\n\n        <ul>\n          <li>\n            {recipes}\n          </li>\n        </ul>\n\n    )\n\n}\n}\n\nexport default RecipeList;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport RecipeList from './RecipeListView.js';\n\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\n\nclass ProfileUpdate extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      recipes: [],\n      preview: ''\n    }\n\n    this.componentDidMount = this.componentDidMount.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleImage = this.handleImage.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({[e.target.name]: e.target.value})\n\n  }\n\n  handleImage(e) {\n    e.preventDefault();\n    let file = e.target.files[0]\n    this.setState({[e.target.name]: file}, () => console.log(this.state));\n\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => this.setState({preview: reader.result});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let formData = new FormData()\n    formData.append('display_name', this.state.display_name)\n    formData.append('bio', this.state.bio)\n\n\n    if (this.state.image === File) {\n      formData.append('avatar', this.state.avatar)\n    } else\n\n    axios.patch(`${BASE_URL}/api/v1/profiles/${this.state.id}/`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n\n\n      }\n    })\n    .then(res => console.log(res), this.setState({redirect: true}))\n    .catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n\n    axios.get(`${BASE_URL}/api/v1/profiles/`, {\n      headers: {'Authorization': `Token ${JSON.parse(localStorage.getItem('current-user')).token}`}\n    })\n    .then(response => this.setState(response.data[0]))\n    .catch(err => console.log(err))\n  }\n  render() {\n    if (this.state.redirect) {\n      return (<Redirect to=\"/profile/\" />)\n    }\n    else\n    return (\n\n            <div className='row no-gutters'>\n              <div className='col-3 card'>\n                <div className='profile-body card-body'>\n                <form type='submit' onSubmit={this.handleSubmit}>\n                  <button>Save Profile</button>\n\n                  <label htmlFor='display_name'>New Display Name: </label>\n                  <input type='text' name='display_name' defaultValue={this.state.display_name} onChange={this.handleChange} />\n                  <h2>{this.state.display_name}</h2>\n\n                    <img src={this.state.avatar} alt=\"don't know about that\" />\n                    <label htmlFor='avatar'>Choose New Avatar: </label>\n                    <input type='file' name='avatar' defaultValue={this.state.avatar} onChange={this.handleImage}/>\n\n                    <input type='text' name='bio' defaultValue={this.state.bio} onChange={this.handleChange} />\n                    <p>{this.state.bio}</p>\n                    </form>\n                    <div className='follows'>\n\n\n                    </div>\n\n                </div>\n\n                <div className='card-footer'>\n                  <p>Member since: {this.state.date_joined}</p>\n                    </div>\n                    </div>\n                    <div className='col-9'>\n                      <RecipeList />\n                    </div>\n                </div>\n\n    )\n  }\n}\nexport default ProfileUpdate;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nimport { NavLink } from 'react-router-dom';\n\nimport RecipeList from './RecipeListView.js'\n\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\n\nclass ProfileView extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      profile: ''\n    }\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this);\n    axios.get(`${BASE_URL}/api/v1/profiles/`, {\n      headers: {'Authorization': `Token ${JSON.parse(localStorage.getItem('current-user')).token}`}\n    })\n    .then(response => this.setState(response.data[0]))\n    .catch(err => console.log(err))\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n\n      <div className='row no-gutters'>\n        <div className='col-3 card'>\n          <div className='profile-body card-body'>\n            <NavLink to='/profile/update/:id'>Update Profile</NavLink>\n            <h2>{this.state.display_name}</h2>\n\n              <img src={this.state.avatar} alt=\"don't know about that\" />\n              <p>{this.state.bio}</p>\n\n              <div className='follows'>\n\n              </div>\n\n          </div>\n\n          <div className='card-footer'>\n            <p>Member since: {this.state.date_joined}</p>\n              </div>\n              </div>\n              <div className='col-9'>\n                <div className=\"card profile-add-recipe col-6 ml-auto\">\n                  <NavLink className='btn btn-outline-info' to='add/recipe/'>Start a New Recipe</NavLink>\n                </div>\n                <RecipeList />\n              </div>\n          </div>\n\n\n    )\n  }\n}\nexport default ProfileView;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nimport {Redirect} from 'react-router-dom';\nimport ProfileView from './ProfileView.js';\n\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\n\nclass ProfileCreate extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      profile: {},\n      preview: '',\n\n    }\n\n    this.handleImage = this.handleImage.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  handleImage(e) {\n    e.preventDefault();\n    let file = e.target.files[0]\n    this.setState({[e.target.name]: file});\n\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => this.setState({preview: reader.result});\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({[e.target.name]: e.target.value})\n\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append('display_name', this.state.display_name)\n    formData.append('bio', this.state.bio)\n    formData.append('avatar', this.state.avatar)\n\n\n    axios.post(`${BASE_URL}/api/v1/profiles/`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Authorization': `Token ${JSON.parse(localStorage.getItem('current-user')).token}`\n      }\n    })\n    .then(response => console.log('data', response.data),\n    this.setState({redirect: true}),\n    )\n    .catch(error => console.log(error));\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return(<Redirect to=\"/profile/\" />)\n    }\n    else\n    return(\n      <div className=\"row no-gutters\">\n        <div className=\"col-10 offset-1 card\">\n          <div className=\"card-body\">\n            <form type='submit' method=\"post\" onSubmit={this.handleSubmit}>\n            <label htmlFor=\"display_name\">Choose a display name.</label>\n            <input type='text' name=\"display_name\" defaultValue='' onChange={this.handleChange} />\n\n            <label htmlFor=\"avatar\">Choose an Avatar</label>\n            <input type=\"file\" name=\"avatar\" defaultValue=\"\" onChange={this.handleImage} />\n\n            <label htmlFor=\"bio\">Add Bio:</label>\n            <input type='text' name=\"bio\" defaultValue='' onChange={this.handleChange} />\n\n            <button>Save Profile</button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n}\nexport default ProfileCreate;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport {NavLink} from 'react-router-dom';\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\nclass RecipeUpdate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      recipes: {},\n    }\n\n    this.handleImageChange = this.handleImageChange.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({[e.target.name]: e.target.value})\n    console.log('change', this.state);\n  }\n\n  handleImageChange(e) {\n    e.preventDefault();\n\n    let file = e.target.files[0];\n\n    this.setState({[e.target.name]: file}, () => console.log(this.state));\n\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => this.setState({preview: reader.result});\n    console.log('img', this.state);\n  }\n\n    handleSubmit(e) {\n      e.preventDefault();\n\n      console.log(this.state);\n\n\n      let formData = new FormData();\n\n      formData.append('title', this.state.title);\n      formData.append('description', this.state.description);\n      formData.append('ingredients', this.state.ingredients);\n      formData.append('instructions', this.state.instructions);\n      formData.append('tags', this.state.tags);\n\n      //when componentdidmount fires, this.state = empty obj\n      //after any edit, this.state = object being edited\n      //if image === a file, not url, send with patch request\n      //if image === a url, not a file, do not send with patch request\n\n      if (this.state.image === File) {\n        formData.append('image', this.state.image);\n      } else\n\n\n\n\n    axios.patch(`${BASE_URL}/api/v1/recipes/${this.props.match.params.id}/`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n    .then(response => console.log(response))\n    .catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    console.log(this.props.match);\n\n    // get request to pull in single recipe\n    axios.get(`${BASE_URL}/api/v1/recipes/${this.props.match.params.id}`)\n    .then(response => this.setState(response.data))\n    .catch(err => console.log(err));\n  }\n\n  render() {\n    return(\n      <div className=\"row no-gutters\">\n        <div className=\"col-10 offset-1\">\n          <form type='submit' method='put' onSubmit={this.handleSubmit}>\n            <label htmlFor=\"title\">Recipe Title:</label>\n            <input type='text' name='title' onChange={this.handleChange} defaultValue={this.state.title} />\n\n            <label htmlFor=\"description\">Description:</label>\n            <input type='text' name='description' onChange={this.handleChange} defaultValue={this.state.description} />\n\n            <label htmlFor=\"image\">Add an Image for this Recipe</label>\n            <input type='file' name='image' onChange={this.handleImageChange} defaultValue={this.state.image} />\n\n            {this.state.image\n              ?\n            <img src={this.state.preview} alt=\"preview not available\" />\n             :\n             (null)\n            }\n\n            <label htmlFor=\"ingredients\">Keep your list of ingredients here</label>\n            <input type='text' name='ingredients' onChange={this.handleChange} defaultValue={this.state.ingredients} />\n\n            <label htmlFor=\"instructions\">Tell us how to make it!</label>\n            <input type='text' name='instructions' onChange={this.handleChange} defaultValue={this.state.instructions} />\n\n            <label htmlFor=\"tags\">Add tags to your recipe so people can find it easier!</label>\n            <input type='text' name='tags' onChange={this.handleChange} defaultValue={this.state.tags} />\n\n            <button>Save Recipe</button>\n\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\nexport default RecipeUpdate;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\nclass RecipeDetail extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      recipe: {}\n\n    }\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n\n\n  handleDelete(e) {\n    axios.delete(`${BASE_URL}/api/v1/recipes/${this.props.match.params.id}/`)\n    .then(response => console.log(response))\n    .catch(err => console.log(err));\n\n\n  }\n\n  componentDidMount() {\n\n\n    // get request to pull in single recipe\n    axios.get(`${BASE_URL}/api/v1/recipes/${this.props.match.params.id}/`)\n    .then(response => this.setState(response.data))\n    .catch(err => console.log(err));\n\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"row no-gutters\">\n        <div className=\"col-8 offset-2 mr-auto card\">\n          <div className=\"card-body\">\n            <div className=\"card-title\">\n              <h2>{this.state.title}</h2>\n\n            </div>\n\n                <div onClick={this.handleDelete} className=\"btn btn-outline-danger\">Delete Recipe</div>\n\n\n              <NavLink to={`/update/${this.state.id}`}><button className=\"btn btn-outline-primary\">Edit Recipe</button></NavLink>\n\n              <p>{this.state.description}</p>\n\n              <p>{this.state.ingredients}</p>\n\n              <p>{this.state.instructions}</p>\n\n              <p>{this.state.date_published}</p>\n\n          </div>\n        </div>\n          <div className=\"col-4 ml-auto\">\n            <img src=\"\" alt=\"Whoops! Sorry! No can do.\"/>\n          </div>\n      </div>\n    )\n  }\n\n}\nexport default RecipeDetail;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\n\nclass RecipeCreate extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n        recipe: {},\n        preview: '',\n\n      }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleImageChange = this.handleImageChange.bind(this);\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({[e.target.name]: e.target.value})\n\n\n  }\n\n  handleImageChange(e) {\n    e.preventDefault();\n    let file = e.target.files[0];\n    this.setState({[e.target.name]: file});\n    console.log(this.state);\n\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => this.setState({preview: reader.result});\n  }\n\n  handleSubmit(e, recipe) {\n    e.preventDefault();\n    let formData = new FormData();\n\n    formData.append('title', recipe.title);\n    formData.append('description', recipe.description);\n    formData.append('image', recipe.image);\n    formData.append('ingredients', recipe.ingredients);\n    formData.append('instructions', recipe.instructions);\n    formData.append('tags', recipe.tags);\n    // formData.append(<user>, recipe.author);\n\n    axios.post(`${BASE_URL}/api/v1/recipes/`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n\n    .then(res => console.log(res, res.data))\n    .catch(err => console.log(err));\n\n  }\n\n  render() {\n    return (\n      <div className=\"row no-gutters\">\n        <div className=\"col-10 offset-1\">\n          <form type='submit' method='post' onSubmit={(e) => this.handleSubmit(e, this.state)}>\n            <label htmlFor=\"title\">Recipe Title:</label>\n            <input type='text' name='title' onChange={this.handleChange} defaultValue='' />\n\n            <label htmlFor=\"description\">Description:</label>\n            <input type='text' name='description' onChange={this.handleChange} defaultValue='' />\n\n            <label htmlFor=\"image\">Add an Image for this Recipe</label>\n            <input type='file' name='image' onChange={this.handleImageChange} />\n\n            {this.state.image\n              ?\n            <img src={this.state.preview} alt=\"preview not available\" />\n             :\n             (null)\n            }\n\n            <label htmlFor=\"ingredients\">Keep your list of ingredients here</label>\n            <input type='text' name='ingredients' onChange={this.handleChange} defaultValue='' />\n\n            <label htmlFor=\"instructions\">Tell us how to make it!</label>\n            <input type='text' name='instructions' onChange={this.handleChange} defaultValue='' />\n\n            <label htmlFor=\"tags\">Add tags to your recipe so people can find it easier!</label>\n            <input type='text' name='tags' onChange={this.handleChange} defaultValue='' />\n\n            <button>Save Recipe</button>\n\n          </form>\n        </div>\n      </div>\n\n\n    )\n  }\n\n}\n\nexport default RecipeCreate;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nimport {Redirect} from 'react-router-dom';\nimport ProfileCreate from './ProfileCreate.js';\n\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\nclass Signup extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n\n    }\n\n    this.signUp = this.signUp.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  signUp(e) {\n    e.preventDefault();\n    // let formData = new FormData();\n    // formData.append('username', this.state.username);\n    // formData.append('email', this.state.email);\n    // console.log(formData);\n\n    console.log(this.state);\n    axios.post(`${BASE_URL}/rest-auth/registration/`, this.state,)\n    .then(res => {\n      localStorage.setItem('current-user', JSON.stringify(res.data));\n      this.setState({redirect: true});\n\n    })\n    .catch(err => {console.log(err);})\n  }\n\n  render() {\n    if (this.state.redirect === true) {\n      return (\n        <Redirect to=\"/profile/create\" />\n      )\n  } else\n    return (\n      <div className=\"card-body\">\n        <form method=\"post\" type=\"submit\" onSubmit={this.signUp}>\n          <label htmlFor=\"username\">Username:</label>\n          <input type=\"text\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={this.handleChange}/>\n          <label htmlFor=\"email\">Email:</label>\n          <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n          <label htmlFor=\"password\">Password:</label>\n          <input type=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleChange} />\n          <label htmlFor=\"password_2\">Password Confirm:</label>\n          <input type=\"password\" name=\"password2\" value={this.state.password2} onChange={this.handleChange} />\n          <button className=\"btn btn-outline-success\">Register</button>\n        </form>\n      </div>\n\n    )\n  }\n}\n\nexport default Signup;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport {Redirect} from 'react-router-dom';\nimport ProfileView from './ProfileView.js';\n\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: '',\n      password: '',\n      redirect: 0\n    }\n\n    this.handleLogin = this.handleLogin.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({[e.target.name]: e.target.value});\n\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n    console.log(this.props);\n    axios.post(`${BASE_URL}/rest-auth/login/`, this.state,)\n    .then(res => {\n      localStorage.setItem('current-user', JSON.stringify(res.data));\n      console.log(res.data);\n      this.setState({redirect: 1})\n\n\n    })\n    .catch(err => {console.log(err);})\n  }\n\n  render() {\n    if (this.state.redirect === 1) {\n      return(<Redirect to=\"/profile/\" />)\n  } else {\n    return (\n\n    <div className=\"card-body\">\n      <form method=\"post\" type=\"submit\" onSubmit={this.handleLogin}>\n        <label htmlFor=\"username\">Username:</label>\n          <input type=\"text\" value={this.state.username} autoComplete=\"username\" name=\"username\" onChange={this.handleChange} />\n        <label htmlFor=\"password\">Password:</label>\n          <input type=\"password\" value={this.state.password} autoComplete=\"current-password\" name=\"password\" onChange={this.handleChange} />\n        <button>Log In</button>\n      </form>\n    </div>\n\n\n\n  )}\n  }\n}\n\nexport default Login;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\n\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\nclass Nav extends Component {\n  constructor() {\n    super();\n    this.handleLogout = this.handleLogout.bind(this)\n\n  }\n\n  handleLogout(e) {\n    e.preventDefault();\n    axios.post(`${BASE_URL}/rest-auth/logout/`, {\n      headers: {\n        'Authorization': `Token ${JSON.parse(localStorage.getItem('current-user')).token}`}\n      })\n    .then(res => {\n      localStorage.removeItem('current-user')\n      window.location.reload(false);\n    })\n    .catch(err => {console.log(err);})\n  }\n\n\n  render() {\n    return (\n      <div className=\"row no-gutters\">\n        <div className='col-12 navbar navbar-expand-lg navbar-dark bg-dark'>\n          <div className='nav navbar-nav'>\n          <div className='left'>\n        <Link className=\"nav-item nav-link\" to=\"/\">Home</Link>\n\n        <Link className=\"nav-item nav-link\" to=\"/recipes/\">Recipes</Link>\n\n        <Link className=\"nav-item nav-link\" to=\"/add/recipe/\">Create Recipe</Link>\n\n        <Link className=\"nav-item nav-link\" to=\"/login\">Login</Link>\n\n        <Link className=\"nav-item nav-link\" to=\"/logout\" onClick={this.handleLogout}>Logout</Link>\n\n        <Link className=\"nav-item nav-link\" to=\"/signup\">Sign Up</Link>\n        </div>\n\n        <div className='right'>\n\n        <form className=\"search form-inline ml-5\">\n          <input className=\"form-control mr-lg-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n          <button className=\"btn btn-outline-light my-2 my-sm-0\" type=\"submit\">Search</button>\n        </form>\n\n        <Link className=\"nav-item nav-link ml-lg-5\" to=\"/profile/\">Profile</Link>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Nav;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n\nclass Home extends Component {\n  \n\n  render() {\n    return (\n      <div className=\"row no-gutters\">\n        <h1>This is the Home Page</h1>\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","import React, {Component} from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams\n} from \"react-router-dom\";\n\nimport ProfileUpdate from './components/ProfileUpdate.js';\nimport ProfileCreate from './components/ProfileCreate.js';\nimport ProfileView from './components/ProfileView.js';\nimport RecipeUpdate from './components/RecipeUpdate.js';\nimport RecipeDetail from './components/RecipeDetail.js'\nimport RecipeCreate from './components/RecipeCreate.js';\nimport RecipeList from './components/RecipeListView.js';\nimport Signup from './components/Signup.js';\nimport Login from './components/Login.js';\nimport Nav from './containers/Nav.js';\nimport Home from './containers/Home.js';\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      recipes: [],\n    }\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n\n    axios.get(`${BASE_URL}/api/v1/recipes/`)\n\n    .then(response => this.setState({recipes: response.data}))\n    .catch(err => console.log(err));\n\n  }\n\n  render() {\n\n    return(\n\n      <Router>\n        <div className='container-fluid'>\n          <Nav />\n\n          <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/profile/update/:id\" component={ProfileUpdate} />\n          <Route path=\"/profile/create/\" component={ProfileCreate} />\n          <Route path=\"/profile/\" component={ProfileView} />\n          <Route path=\"/add/recipe/\" component={RecipeCreate} />\n          <Route path=\"/recipes/\" exact component={RecipeList}/>\n          <Route path=\"/recipes/:id\" component={RecipeDetail} />\n          <Route path=\"/update/:id/\" component={RecipeUpdate} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import'bootstrap/dist/css/bootstrap.min.css';\nimport $ from'jquery';\nimport Popper from 'popper.js';\nimport'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}